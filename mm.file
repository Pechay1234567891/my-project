package gabiy;

import java.util.Random;
import java.util.Stack;
import java.util.Scanner;

public class mm {

    public static void main(String[] args) {
        Stack<Integer> LTn = new Stack<>();
        Random random = new Random();
        Scanner unomNumber = new Scanner(System.in);
        while(true) {
        System.out.println();
        System.out.println("__________Welcome to Lotto Game!__________");
        System.out.println();
        int li;
        System.out.println("1.) 2 digit draw");
        System.out.println("2.) 3 digit draw");
        System.out.println("3.) 4 digit draw");
        System.out.println("4.) 6 digit draw");
        System.out.print("pick a draw:");
        li = unomNumber.nextInt();
      
        switch(li) {
        case 1:
        
            System.out.println("enter 2 digits (1-50)");
            Stack<Integer> IYNm = new Stack<>();
            for (int i = 0; i < 2; i++)
            {
                int Un = unomNumber.nextInt();
                if (Un < 1 || Un > 50) {
                	 System.out.println();
                    System.out.println("Invalid input. Please enter a number between 1 and 50.");
                    i--;
                } else {
                    IYNm.push(Un);
                }
            }
            
           int bets = 0;
            while (bets < 1) {
            	   
                System.out.println("(Min bet amount is $1) \nEnter your bet amount:");
                bets = unomNumber.nextInt();
                if (bets < 1) {
                	   System.out.println();
                    System.out.println( " " + bets +" " +"is Insufficient bet amount!");
                }
                for (int i = 0; i < 2; i++) {
                    int Rn = random.nextInt(50) + 1; 
                    LTn.push(Rn);
                }
                System.out.println();
                System.out.println("__________Lotto numbers for this round:__________");
                Stack<Integer> LTnCopy = (Stack<Integer>) LTn.clone();
                while (!LTnCopy.isEmpty()) {
                    int number = LTnCopy.pop();
                    System.out.print(number + " ");
                }
                System.out.println();
                System.out.println("\nchosen numbers:");
                Stack<Integer> UnsCopy = (Stack<Integer>) IYNm.clone();
                while (!UnsCopy.isEmpty()) {
                    int number = UnsCopy.pop();
                    System.out.print(number + " ");
                }

                int MNs = 0;
                Stack<Integer> LTnCopy2 = (Stack<Integer>) LTn.clone();
                while (!IYNm.isEmpty())
                {
                    int Un = IYNm.pop();
                    if (LTnCopy2.contains(Un)) {
                        MNs++;
                        LTnCopy2.removeElement(Un); 
                    }
                }

                int prize = 0;
                if (MNs >= 3) {
                    prize = bets * 10000; 
                    System.out.println();
                    System.out.println("\nCongratulations! You matched " + MNs + " numbers and won " + prize + " dollars!");
                } else {
                	 System.out.println();
                    System.out.println("\nSorry, you did not win this time. You matched " + MNs + " numbers.");
                }
                  
            }    
            break; 
        case 2:
            
            System.out.println("enter 3 digits (0-9)");
            Stack<Integer> N1 = new Stack<>();
            for (int i = 0; i < 3; i++)
            {
                int Un = unomNumber.nextInt();
                if (Un < 0 || Un > 9) {
                	 System.out.println();
                    System.out.println("Invalid input. Please enter a number between 0 and 9.");
                    i--;
                } else {
                    N1.push(Un);
                }
            }
            
           int bets1 = 0;
           while (bets1 < 1) {
           	   
               System.out.println("(Min bet is $0) \nEnter bet amount:");
               bets = unomNumber.nextInt();
               if (bets1 < 0) {
               	   System.out.println();
                   System.out.println( " " + bets +" " +"is Insufficient bet amount!");
               }
               for (int i = 0; i < 3; i++) {
                   int Rn = random.nextInt(9) + 0; 
                   LTn.push(Rn);
               }
               System.out.println();
               System.out.println("__________Lotto numbers for this round:__________");
               Stack<Integer> LTnCopy = (Stack<Integer>) LTn.clone();
               while (!LTnCopy.isEmpty()) {
                   int number = LTnCopy.pop();
                   System.out.print(number + " ");
               }
               System.out.println();
               System.out.println("\nchosen numbers:");
               Stack<Integer> UnsCopy = (Stack<Integer>) N1.clone();
               while (!UnsCopy.isEmpty()) {
                   int number = UnsCopy.pop();
                   System.out.print(number + " ");
               }

               int MNs = 0;
               Stack<Integer> LTnCopy2 = (Stack<Integer>) LTn.clone();
               while (!N1.isEmpty())
               {
                   int Un = N1.pop();
                   if (LTnCopy2.contains(Un)) {
                       MNs++;
                       LTnCopy2.removeElement(Un); 
                   }
               }

               int prize = 0;
               if (MNs >= 3) {
                   prize = bets * 3500; 
                   System.out.println();
                   System.out.println("\nCongratulations! You matched " + MNs + " numbers and won " + prize + " dollars!");
               } else {
               	 System.out.println();
                   System.out.println("\nSorry, you did not win this time. You matched " + MNs + " numbers.");
               }
                 bets1++;
           }    
           break; 
           case 3:
               
               System.out.println("enter 4 digits");
               Stack<Integer> in2 = new Stack<>();
               for (int i = 0; i < 4; i++)
               {
                   int Un = unomNumber.nextInt();
                   if (Un < 0 || Un > 9) {
                   	 System.out.println();
                       System.out.println("Invalid input > input digits between 0 and 9.");
                       i--; 
                   } else {
                       in2.push(Un);
                   }
               }
               
              int bets2 = 0;
               while (bets2 < 1) {
               	   
                   System.out.println("(Min bet amount $1 ) \nplace bet amount:");
                   bets = unomNumber.nextInt();
                   if (bets < 1) {
                   	   System.out.println();
                       System.out.println( " " + bets +" " +" Insufficient bet amount!");
                   }
                   for (int i = 0; i < 4; i++) {
                       int Rn = random.nextInt(50) + 1;
                       LTn.push(Rn);
                   }
                   System.out.println();
                   System.out.println("__________Lotto numbers for this round:__________");
                   Stack<Integer> LTnCopy = (Stack<Integer>) LTn.clone();
                   while (!LTnCopy.isEmpty()) {
                       int number = LTnCopy.pop();
                       System.out.print(number + " ");
                   }
                   System.out.println();
                   System.out.println("\nchosen numbers:");
                   Stack<Integer> UnsCopy = (Stack<Integer>) in2.clone();
                   while (!UnsCopy.isEmpty()) {
                       int number = UnsCopy.pop();
                       System.out.print(number + " ");
                   }

                   int MNs = 0;
                   Stack<Integer> LTnCopy2 = (Stack<Integer>) LTn.clone();
                   while (!in2.isEmpty()) {
                       int Un = in2.pop();
                       if (LTnCopy2.contains(Un)) {
                           MNs++;
                           LTnCopy2.removeElement(Un); 
                       }
                   }

                   int prize = 0;
                   if (MNs >= 3) {
                       prize = bets * 4500; 
                       System.out.println();
                       System.out.println("\nCongratulations! You matched " + MNs + " numbers and won " + prize + " dollars!");
                   } else {
                   	 System.out.println();
                       System.out.println("\nSorry, you did not win this time. You matched " + MNs + " numbers.");
                   }
                    bets2++;  
               } 
               break;
           case 4:
               
               System.out.println("enter 6 digits (1-90)");
               Stack<Integer> In3 = new Stack<>();
               for (int i = 1; i < 7; i++)
               {
                   int Un = unomNumber.nextInt();
                   if (Un < 1 || Un > 90) {
                   	 System.out.println();
                       System.out.println("Invalid input. Please enter a number between 1 and 90.");
                       i--; 
                   } else {
                       In3.push(Un);
                   }
               }
               
                   for (int i = 0; i < 6; i++) {
                       int Rn = random.nextInt(90) + 1; 
                       LTn.push(Rn);
                   }
                   System.out.println();
                   System.out.println("__________Lotto numbers for this round:__________");
                   Stack<Integer> LTnCopy = (Stack<Integer>) LTn.clone();
                   while (!LTnCopy.isEmpty()) {
                       int number = LTnCopy.pop();
                       System.out.print(number + " ");
                   }
                   System.out.println();
                   System.out.println("\nchosen numbers:");
                   Stack<Integer> UnsCopy = (Stack<Integer>) In3.clone();
                   while (!UnsCopy.isEmpty()) {
                       int number = UnsCopy.pop();
                       System.out.print(number + " ");
                   }

                   int MNs = 0;
                   Stack<Integer> LTnCopy2 = (Stack<Integer>) LTn.clone();
                   while (!In3.isEmpty()) {
                       int Un = In3.pop();
                       if (LTnCopy2.contains(Un)) {
                           MNs++;
                           LTnCopy2.removeElement(Un); 
                       }
                   }
                   int bet = 20;
                   int prize = 0;
                   if (MNs >= 3) {
                       prize = bet * 5000;
                       System.out.println();
                       System.out.println("\nCongratulations! You matched " + MNs + " numbers and won " + prize + " dollars!");
                   } else {
                   	 System.out.println();
                       System.out.println("\nSorry, you did not win this time. You matched " + MNs + " numbers.");
                }
            bet++;  
         }
      }
   } 
}